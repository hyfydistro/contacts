(()=>{"use strict";var __webpack_modules__={604:()=>{eval('\n;// CONCATENATED MODULE: ./src/scripts/libs/mediaquery.js\n// Media Queries\nvar mqMinWidth640px = window.matchMedia("(min-width: 640px)");\nvar mqMaxWidth639px = window.matchMedia("(max-width: 639px)");\n;// CONCATENATED MODULE: ./src/scripts/libs/validatePhoneNumber.js\n// Validates for the following pattern:\n// +XX-XXXX-XXXX\n// +XX.XXXX.XXXX\n// +XX XXXX XXXX\n// XXXXXXXXXX (max length: 10)\nfunction validatePhoneNumber(numebr) {\n  var regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n  if (numebr.match(regex)) {\n    return true;\n  }\n\n  return false;\n}\n;// CONCATENATED MODULE: ./src/scripts/libs/validateEmail.js\nfunction validateEmail(email) {\n  var regex = /^[a-zA-Z0-9.!#$%&\'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  if (email.match(regex)) {\n    return true;\n  }\n\n  return false;\n}\n;// CONCATENATED MODULE: ./src/scripts/view.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n // ====\n// VIEW\n// ====\n\nvar View = /*#__PURE__*/function () {\n  function View() {\n    _classCallCheck(this, View);\n\n    // # SELECTORS\n    // ======\n    // header\n    // ======\n    this.logo = this.getElement(".logo-title");\n    this.addSmallBtn = this.getElement(".btn__text--add-form");\n    this.addLargeBtn = this.getElement(".btn__block-contained--add-form"); // this.addLargeBtn\n\n    this.editBtnAtHeader = document.querySelectorAll(".btn__text--edit-form")[0];\n    this.editBtnAtContactViewPage = document.querySelectorAll(".btn__text--edit-form")[1];\n    this.backBtn = this.getElement(".btn__text--back-form"); // tab options\n\n    this.tabsContainer = this.getElement(".tabs-container");\n    this.tabsOptionsAllContacts = this.getElement(".tabs-option__all-contacts");\n    this.tabsOptionsFavorites = this.getElement(".tabs-option__favorites");\n    this.mainElement = this.getElement("main"); // ============\n    // contact list\n    // ============\n\n    this.contactListWrapper = this.getElement(".contact-container");\n    this.contactList = this.getElement(".contact-list__container");\n    this.contactListPlaceholder = this.getElement(".contact-placeholder__container");\n    this.contactListFavorites = this.getElement(".contact-list__container--favourites"); // =================\n    // contact view page\n    // =================\n\n    this.contactViewWrapper = this.getElement(".contact-view__container");\n    this.contactViewName = this.getElement(".contact-view__name-input--text");\n    this.contactViewEmail = this.getElement(".contact-view__email-input--text");\n    this.contactViewPhone = this.getElement(".contact-view__view__phone-input--text"); // ======\n    // module\n    // ======\n\n    this.moduleWrapper = this.getElement(".module__wrapper");\n    this.moduleTitle = this.getElement(".module__title"); // module buttons\n\n    this.cancelBtn = this.getElement(".btn__text--cancel-form");\n    this.saveBtn = this.getElement(".btn__text--save-form");\n    this.updateBtn = this.getElement(".btn__text--update-form");\n    this.deleteBtnContainer = this.getElement(".module-form__button-container");\n    this.deleteBtn = this.getElement(".btn__block--delete-form"); // module input fields\n\n    this.moduleNameInput = this.getElement(".module-form__name-input--text");\n    this.moduleEmailInput = this.getElement(".module-form__email-input--text");\n    this.modulePhoneInput = this.getElement(".module-form__phone-input--text"); // Alert Messages: Error\n\n    this.nameInputErrorBlock = this.getElement(".module-form__name-error");\n    this.nameInputErrorText = this.getElement(".module-form__name-error--text");\n    this.emailInputErrorBlock = this.getElement(".module-form__email-error");\n    this.emailInputErrorText = this.getElement(".module-form__email-error--text");\n    this.phoneInputErrorBlock = this.getElement(".module-form__phone-error");\n    this.phoneInputErrorText = this.getElement(".module-form__phone-error--text"); // module overlay\n\n    this.moduleOverlay = this.getElement(".module__overlay");\n  }\n\n  _createClass(View, [{\n    key: "createElement",\n    value: function createElement(tag, className) {\n      var element = document.createElement(tag);\n      if (className) element.classList.add(className);\n      return element;\n    } // Retrieve an element from the DOM\n\n  }, {\n    key: "getElement",\n    value: function getElement(selector) {\n      // * Use CSS selector pattern\n      var element = document.querySelector(selector);\n      return element;\n    }\n  }, {\n    key: "_moduleNameInputText",\n    get: function get() {\n      return this.moduleNameInput.value;\n    }\n  }, {\n    key: "_moduleEmailInputText",\n    get: function get() {\n      return this.moduleEmailInput.value;\n    }\n  }, {\n    key: "_modulePhoneInputText",\n    get: function get() {\n      return this.modulePhoneInput.value;\n    }\n  }, {\n    key: "_resetInput",\n    value: function _resetInput() {\n      this.moduleNameInput.value = "";\n      this.moduleEmailInput.value = "";\n      this.modulePhoneInput.value = "";\n    }\n  }, {\n    key: "createContact",\n    value: function createContact(contact) {\n      var contactDiv = this.createElement("div", "contact-list");\n      contactDiv.id = contact.id;\n      var contactFavoriteWrapper = this.createElement("label", "contact-list__icon--favorite");\n      var contactFavoriteCheckbox = this.createElement("input");\n      contactFavoriteCheckbox.type = "checkbox";\n      contactFavoriteCheckbox.id = "checkboxID";\n      contactFavoriteCheckbox.checked = contact.favorite;\n      var contactFavoriteIcon = this.createElement("span", "pseudo--favorite");\n      contactFavoriteWrapper.append(contactFavoriteCheckbox, contactFavoriteIcon);\n      var contentWrapper = this.createElement("a", "btn__wrapper--view-contact");\n      contentWrapper.classList.add("btn__wrapper");\n      contentWrapper.setAttribute("href", "#");\n      var contactNameWrapper = this.createElement("span", "contact-list__name");\n      var contactNameText = this.createElement("p");\n      var contactNameTextNode = document.createTextNode(contact.name);\n      contactNameText.append(contactNameTextNode);\n      contactNameWrapper.append(contactNameText);\n      var contactArrowIconWrapper = this.createElement("span", "contact-list__icon--right-arrow");\n      var contactArrowIcon = this.createElement("i");\n      contactArrowIcon.classList.add("fas", "fa-chevron-right");\n      contactArrowIconWrapper.append(contactArrowIcon);\n      contentWrapper.append(contactNameWrapper, contactArrowIconWrapper);\n      contactDiv.append(contactFavoriteWrapper, contentWrapper);\n      return contactDiv;\n    }\n  }, {\n    key: "displayContactList",\n    value: function displayContactList() {\n      if (this.contactList.firstChild) {\n        // Initial display\n        // Show default message\n        this.contactListPlaceholder.classList.add("hidden");\n        this.contactList.classList.remove("hidden");\n\n        if (!this.contactListFavorites.classList.contains("hidden")) {\n          this.contactListFavorites.classList.add("hidden");\n        }\n      } else {\n        this.contactListPlaceholder.lastElementChild.firstElementChild.textContent = "No contact available. Add contact?";\n      }\n    }\n  }, {\n    key: "renderContactList",\n    value: function renderContactList(contactData) {\n      var _this = this;\n\n      // Reset contact list\n      while (this.contactList.firstChild) {\n        this.contactList.removeChild(this.contactList.firstChild);\n      }\n\n      contactData.forEach(function (contact) {\n        var contactElement = _this.createContact(contact);\n\n        _this.contactList.append(contactElement);\n      });\n    }\n  }, {\n    key: "displayFavoriteList",\n    value: function displayFavoriteList() {\n      this.contactList.classList.add("hidden");\n\n      if (this.contactListFavorites.firstChild) {\n        this.contactListFavorites.classList.remove("hidden");\n      } else {\n        this.contactListPlaceholder.classList.remove("hidden");\n        this.contactListPlaceholder.lastElementChild.firstElementChild.textContent = "No favorite contact. Add favorite?";\n      }\n    }\n  }, {\n    key: "renderFavoriteList",\n    value: function renderFavoriteList(contactData) {\n      var _this2 = this;\n\n      // Reset favorite list\n      while (this.contactListFavorites.firstChild) {\n        this.contactListFavorites.removeChild(this.contactListFavorites.firstChild);\n      }\n\n      var favoriteList = contactData.filter(function (currentObj) {\n        return currentObj.favorite;\n      });\n      favoriteList.forEach(function (contact) {\n        var contactElement = _this2.createContact(contact);\n\n        _this2.contactListFavorites.append(contactElement);\n      });\n    } // ===============\n    // EVENT LISTENERS\n    // ===============\n\n  }, {\n    key: "onWindowResize",\n    value: function onWindowResize() {\n      var _this3 = this;\n\n      window.addEventListener("resize", function () {\n        // Resize from small device to large device\n        if (mqMinWidth640px.matches) {\n          // ? probably don\'t need to address editBtnAtContactViewPage visibility here.\n          // Use via CSS styles\n          _this3.editBtnAtContactViewPage.classList.remove("hidden");\n\n          if (_this3.addSmallBtn.classList.contains("hidden")) {\n            _this3.addSmallBtn.classList.add("hidden");\n          } // SCENARIO #1: at Contact List page\n\n\n          if (_this3.contactViewWrapper.classList.contains("hidden")) {\n            _this3.contactViewWrapper.classList.remove("hidden"); // * Hotfix side effects if window expaned\n\n\n            if (_this3.editBtnAtContactViewPage.classList.contains("hidden")) {\n              _this3.editBtnAtContactViewPage.classList.remove("hidden");\n            }\n          } // SCENARIO #2: at Contact View page\n\n\n          if (_this3.contactListWrapper.classList.contains("hidden")) {\n            _this3.tabsContainer.classList.remove("hidden");\n\n            _this3.editBtnAtHeader.classList.add("hidden");\n\n            _this3.logo.classList.remove("hidden");\n\n            _this3.backBtn.classList.add("hidden");\n\n            _this3.contactListWrapper.classList.remove("hidden");\n          }\n        } // Resize from large device to small device\n\n\n        if (mqMaxWidth639px.matches) {\n          if (!_this3.contactViewWrapper.classList.contains("hidden")) {\n            _this3.contactViewWrapper.classList.add("hidden");\n          }\n        }\n      });\n    } // Display "Favorites" list\n\n  }, {\n    key: "onChangeToFavoriteTabs",\n    value: function onChangeToFavoriteTabs() {\n      var _this4 = this;\n\n      this.tabsOptionsFavorites.addEventListener("click", function (e) {\n        _this4.displayFavoriteList();\n\n        _this4.tabsOptionsAllContacts.classList.remove("selected");\n\n        _this4.tabsOptionsAllContacts.firstElementChild.firstElementChild.classList.remove("text--semi-bold");\n\n        _this4.tabsOptionsFavorites.classList.add("selected");\n\n        _this4.tabsOptionsFavorites.firstElementChild.lastElementChild.classList.add("text--semi-bold");\n\n        _this4.tabsOptionsFavorites.firstElementChild.firstElementChild.classList.toggle("text--semi-bold");\n\n        e.preventDefault();\n      });\n    } // Display "All Contacts" list\n\n  }, {\n    key: "onChangeToAllContactsTabs",\n    value: function onChangeToAllContactsTabs() {\n      var _this5 = this;\n\n      this.tabsOptionsAllContacts.addEventListener("click", function (e) {\n        _this5.displayContactList();\n\n        _this5.tabsOptionsFavorites.classList.remove("selected");\n\n        _this5.tabsOptionsFavorites.firstElementChild.firstElementChild.classList.remove("text--semi-bold");\n\n        _this5.tabsOptionsAllContacts.classList.add("selected");\n\n        _this5.tabsOptionsAllContacts.firstElementChild.lastElementChild.classList.add("text--semi-bold");\n\n        _this5.tabsOptionsFavorites.firstElementChild.firstElementChild.classList.toggle("text--semi-bold");\n\n        e.preventDefault();\n      });\n    }\n  }, {\n    key: "onToggleFavorite",\n    value: function onToggleFavorite(toggleFavoriteHandler) {\n      var favoriteIcons = document.querySelectorAll(".contact-list__icon--favorite");\n      favoriteIcons.forEach(function (currentFavIcon) {\n        currentFavIcon.addEventListener("click", function (e) {\n          var targetContactId = currentFavIcon.parentElement.id;\n          toggleFavoriteHandler(targetContactId);\n          e.preventDefault();\n        });\n      });\n    } // Display selected contact details on to Contact Page\n\n  }, {\n    key: "onDisplayContactView",\n    value: function onDisplayContactView(contactData, setCurrentIdHandler) {\n      var _this6 = this;\n\n      var contactListWrapperAll = document.querySelectorAll(".btn__wrapper--view-contact");\n      contactListWrapperAll.forEach(function (contactElement) {\n        contactElement.addEventListener("click", function (e) {\n          var targetContactId = contactElement.parentElement.id;\n\n          if (setCurrentIdHandler) {\n            _this6.displayContactView(contactData, targetContactId, setCurrentIdHandler);\n          } // Set up module form\n          // on "click" event for "edit button"\n\n\n          _this6.onOpenEditContactForm(contactData, targetContactId);\n\n          e.preventDefault();\n        });\n      });\n    } // Set up contact view page\n\n  }, {\n    key: "displayContactView",\n    value: function displayContactView(contactData, targetContactId, setCurrentIdHandler) {\n      this.contactViewWrapper.classList.remove("hidden"); // At Small Devices\n      // change header options\n      // hide everything else\n\n      if (mqMaxWidth639px.matches) {\n        this.contactListWrapper.classList.add("hidden");\n        this.tabsContainer.classList.add("hidden");\n        this.logo.classList.add("hidden");\n        this.addSmallBtn.classList.add("hidden");\n        this.editBtnAtHeader.classList.remove("hidden");\n        this.backBtn.classList.remove("hidden"); // * Hotfix side effects if window expaned\n\n        if (!this.editBtnAtContactViewPage.classList.contains("hidden")) {\n          this.editBtnAtContactViewPage.classList.add("hidden");\n        }\n      } // At Large Devices\n\n\n      if (mqMinWidth640px.matches) {\n        this.editBtnAtContactViewPage.classList.remove("hidden"); // * Hotfix side effects if window expaned\n\n        if (!this.editBtnAtHeader.classList.contains("hidden")) {\n          this.editBtnAtHeader.classList.add("hidden");\n          this.backBtn.classList.add("hidden");\n        }\n\n        if (!this.contactViewWrapper.classList.contains("hidden")) {\n          this.mainElement.style.justifyContent = "center";\n        } else {\n          this.mainElement.style.justifyContent = "flex-start";\n        }\n      }\n\n      this.renderContactView(contactData, targetContactId);\n\n      var _contactData$filter = contactData.filter(function (contact) {\n        return contact.id == targetContactId;\n      }),\n          _contactData$filter2 = _slicedToArray(_contactData$filter, 1),\n          targetContactData = _contactData$filter2[0]; // Set \'currentId\' for Model\n\n\n      setCurrentIdHandler(targetContactData.id);\n    } // Render Contact Page inputs\n\n  }, {\n    key: "renderContactView",\n    value: function renderContactView(contactData, targetContactId) {\n      // Get target contact data\n      var _contactData$filter3 = contactData.filter(function (contact) {\n        return contact.id == targetContactId;\n      }),\n          _contactData$filter4 = _slicedToArray(_contactData$filter3, 1),\n          targetContactData = _contactData$filter4[0]; // Display targeted contacts\n\n\n      this.contactViewName.textContent = targetContactData.name;\n      this.contactViewEmail.textContent = targetContactData.email;\n      this.contactViewPhone.textContent = targetContactData.phone;\n    }\n  }, {\n    key: "onBackBtn",\n    value: function onBackBtn() {\n      var _this7 = this;\n\n      this.backBtn.addEventListener("click", function () {\n        // go back to contact list\n        _this7.contactViewWrapper.classList.add("hidden"); // change header options\n        // hide everything else\n\n\n        _this7.contactListWrapper.classList.remove("hidden");\n\n        _this7.tabsContainer.classList.remove("hidden");\n\n        _this7.logo.classList.remove("hidden");\n\n        _this7.addSmallBtn.classList.remove("hidden");\n\n        _this7.editBtnAtHeader.classList.add("hidden");\n\n        _this7.backBtn.classList.add("hidden");\n      });\n    }\n  }, {\n    key: "onSaveContact",\n    value: function onSaveContact(addContacthandler, contactData) {\n      var _this8 = this;\n\n      this.saveBtn.addEventListener("click", function (e) {\n        if (_this8.validateInputs(_this8._moduleNameInputText, _this8._moduleEmailInputText, _this8._modulePhoneInputText)) {\n          addContacthandler(_this8._moduleNameInputText, _this8._moduleEmailInputText, _this8._modulePhoneInputText);\n\n          _this8.manageError(_this8._moduleNameInputText, _this8._moduleEmailInputText, _this8._modulePhoneInputText);\n\n          _this8._resetInput();\n\n          _this8.closeModule(); // * On first contact created,\n          // depending on what tabs you\'re on:\n          // - SCENARIO #1: on tabs "All Contacts"\n          //    Remove placeholder\n          // display "All Contacts" list\n          // - SCENARIO #2: on tabs "Favorites"\n          //    Do nothing\n\n\n          if (contactData.length === 1) {\n            if (_this8.tabsOptionsAllContacts.classList.contains("selected")) {\n              _this8.displayContactList();\n            }\n          }\n        } else {\n          _this8.manageError(_this8._moduleNameInputText, _this8._moduleEmailInputText, _this8._modulePhoneInputText);\n        }\n\n        e.preventDefault();\n      });\n    } // Sanitize inputs\n\n  }, {\n    key: "validateInputs",\n    value: function validateInputs(name, email, phone) {\n      if (name === "" || name == null) {\n        return false;\n      }\n\n      if (name.length > 100) {\n        return false;\n      }\n\n      if (validateEmail(email) == false) {\n        return false;\n      }\n\n      if (email > 100) {\n        return false;\n      }\n\n      if (phone) {\n        if (validatePhoneNumber(this._modulePhoneInputText) == false) {\n          return false;\n        }\n      }\n\n      return true;\n    } // Show error where available\n\n  }, {\n    key: "manageError",\n    value: function manageError(name, email, phone) {\n      if (name === "" || name == null) {\n        this.nameInputErrorBlock.classList.remove("hidden");\n        this.nameInputErrorText.textContent = "Name cannot be empty.";\n      } else if (name.length > 100) {\n        this.nameInputErrorBlock.classList.remove("hidden");\n        this.nameInputErrorText.textContent = "Name must be less than 100 characters.";\n      }\n\n      if (name && name.length < 100) {\n        if (!this.nameInputErrorBlock.classList.contains("hidden")) {\n          this.nameInputErrorBlock.classList.add("hidden");\n        }\n      }\n\n      if (email === "" || email == null) {\n        this.emailInputErrorBlock.classList.remove("hidden");\n        this.emailInputErrorText.textContent = "Email is not valid. Have you used \'@\'? ";\n      }\n\n      if (validateEmail(email) == false) {\n        this.emailInputErrorBlock.classList.remove("hidden");\n        this.emailInputErrorText.textContent = "Email cannot be empty.";\n      }\n\n      if (email.length > 100) {\n        this.emailInputErrorBlock.classList.remove("hidden");\n        this.emailInputErrorText.textContent = "Email must be less than 100 characters.";\n      }\n\n      if (validateEmail(email) == true && email.length < 100 && email && email != null) {\n        if (!this.emailInputErrorBlock.classList.contains("hidden")) {\n          this.emailInputErrorBlock.classList.add("hidden");\n        }\n      }\n\n      if (phone) {\n        if (validatePhoneNumber(this._modulePhoneInputText) == false) {\n          this.phoneInputErrorBlock.classList.remove("hidden");\n          this.phoneInputErrorText.textContent = "Phone number is not valid.";\n        } else if (this.phoneInputErrorBlock.classList.contains("hidden")) {\n          this.phoneInputErrorBlock.classList.add("hidden");\n        }\n      }\n    }\n  }, {\n    key: "onOpenAddContactForm",\n    value: function onOpenAddContactForm() {\n      var _this9 = this;\n\n      var addBtnAll = [this.addSmallBtn, this.addLargeBtn];\n      addBtnAll.forEach(function (addBtn) {\n        addBtn.addEventListener("click", function () {\n          _this9.openModule();\n\n          if (_this9.saveBtn.classList.contains("hidden")) {\n            _this9.updateBtn.classList.add("hidden");\n\n            _this9.deleteBtnContainer.classList.add("hidden");\n\n            _this9.saveBtn.classList.remove("hidden");\n\n            _this9.moduleTitle.firstElementChild.textContent = "Add Contact";\n          }\n        });\n      });\n    }\n  }, {\n    key: "onCloseAddContactForm",\n    value: function onCloseAddContactForm() {\n      var _this10 = this;\n\n      this.cancelBtn.addEventListener("click", function () {\n        _this10.closeModule();\n\n        _this10._resetInput();\n      });\n    }\n  }, {\n    key: "closeModule",\n    value: function closeModule() {\n      this.moduleWrapper.classList.add("off-screen");\n\n      if (mqMinWidth640px.matches) {\n        if (!this.moduleOverlay.classList.contains("hidden")) {\n          this.moduleOverlay.classList.add("hidden");\n        }\n      }\n    }\n  }, {\n    key: "openModule",\n    value: function openModule() {\n      this.moduleWrapper.classList.remove("off-screen");\n\n      if (mqMinWidth640px.matches) {\n        if (this.moduleOverlay.classList.contains("hidden")) {\n          this.moduleOverlay.classList.remove("hidden");\n        }\n      }\n    }\n  }, {\n    key: "onOpenEditContactForm",\n    value: function onOpenEditContactForm(contactData, currentContactId) {\n      var _this11 = this;\n\n      var _contactData$filter5 = contactData.filter(function (contact) {\n        return contact.id == currentContactId;\n      }),\n          _contactData$filter6 = _slicedToArray(_contactData$filter5, 1),\n          currentContact = _contactData$filter6[0];\n\n      var editBtn = [this.editBtnAtHeader, this.editBtnAtContactViewPage];\n      editBtn.forEach(function (currentEditBtn) {\n        currentEditBtn.addEventListener("click", function (e) {\n          // Set up UI\n          _this11.openModule();\n\n          if (_this11.updateBtn.classList.contains("hidden")) {\n            _this11.setEditContactForm(currentContact);\n          } // At Small Devices\n\n\n          if (mqMaxWidth639px) {\n            _this11.setEditContactForm(currentContact);\n          } // At Large Devices\n\n\n          if (mqMinWidth640px) {\n            _this11.setEditContactForm(currentContact);\n          }\n\n          e.preventDefault();\n        });\n      });\n    }\n  }, {\n    key: "setEditContactForm",\n    value: function setEditContactForm(currentContact) {\n      // Set up UI\n      this.updateBtn.classList.remove("hidden");\n      this.deleteBtnContainer.classList.remove("hidden");\n      this.saveBtn.classList.add("hidden");\n      this.moduleTitle.firstElementChild.textContent = "Edit Contact";\n      this.setFormInputs(currentContact);\n    }\n  }, {\n    key: "setFormInputs",\n    value: function setFormInputs(currentContact) {\n      // Set up inputs\n      this.moduleNameInput.value = currentContact.name;\n      this.moduleEmailInput.value = currentContact.email;\n      this.modulePhoneInput.value = currentContact.phone;\n    } // Get current Id set from opening Contact View\n\n  }, {\n    key: "onUpdateContact",\n    value: function onUpdateContact(updateContactHandler) {\n      var _this12 = this;\n\n      this.updateBtn.addEventListener("click", function (e) {\n        // Validate input values\n        if (_this12.validateInputs(_this12._moduleNameInputText, _this12._moduleEmailInputText, _this12._modulePhoneInputText)) {\n          updateContactHandler(_this12._moduleNameInputText, _this12._moduleEmailInputText, _this12._modulePhoneInputText);\n\n          _this12.manageError(_this12._moduleNameInputText, _this12._moduleEmailInputText, _this12._modulePhoneInputText);\n\n          _this12._resetInput();\n\n          _this12.closeModule();\n        } else {\n          _this12.manageError(_this12._moduleNameInputText, _this12._moduleEmailInputText, _this12._modulePhoneInputText);\n        }\n\n        e.preventDefault();\n      });\n    }\n  }, {\n    key: "onDeleteBtn",\n    value: function onDeleteBtn() {// TODO\n      // get id\n      // delete contact\n      // close module\n      // re render DOM\n    }\n  }]);\n\n  return View;\n}();\n\n/* harmony default export */ const view = (View);\n;// CONCATENATED MODULE: ./src/scripts/controller.js\nfunction controller_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// ==========\n// Controller\n// ==========\nvar Controller = function Controller(model, view) {\n  var _this = this;\n\n  controller_classCallCheck(this, Controller);\n\n  _defineProperty(this, "onInitialLoad", function (contactList) {\n    // Re-render UI\n    _this.view.renderContactList(contactList);\n\n    _this.view.renderFavoriteList(contactList); // Add event\n\n\n    _this.view.displayContactList(contactList); // add "resize" event\n\n  });\n\n  _defineProperty(this, "onContactListChanged", function (contactList) {\n    // Re-render UI\n    _this.view.renderContactList(contactList);\n\n    _this.view.renderFavoriteList(contactList);\n\n    _this.view.onDisplayContactView(_this.model.contactlist, _this.setCurrentId);\n  });\n\n  _defineProperty(this, "handleAddContact", function (name, email, phone) {\n    _this.model.addContact(name, email, phone);\n\n    _this.onContactListChanged(_this.model.contactlist); // Add event\n\n\n    _this.view.onToggleFavorite(_this.handleToggleFavorite);\n  });\n\n  _defineProperty(this, "handleToggleFavorite", function (targetContactId) {\n    _this.model.updateFavorite(targetContactId);\n\n    _this.onContactListChanged(_this.model.contactlist); // Add event\n\n\n    _this.view.onToggleFavorite(_this.handleToggleFavorite);\n  });\n\n  _defineProperty(this, "handleUpdateContact", function (updatedName, updatedEmail, updatedPhone) {\n    _this.model.editContact(_this.model.currentId, updatedName, updatedEmail, updatedPhone);\n\n    _this.onContactListChanged(_this.model.contactlist);\n\n    _this.view.renderContactView(_this.model.contactlist, _this.model.currentId); // Add event\n\n\n    _this.view.onToggleFavorite(_this.handleToggleFavorite);\n\n    _this.view.onOpenEditContactForm(_this.model.contactlist, _this.model.currentId);\n  });\n\n  _defineProperty(this, "setCurrentId", function (id) {\n    _this.model.setCurrentId(id);\n  });\n\n  this.model = model;\n  this.view = view; // Initial load\n\n  this.onInitialLoad(this.model.contactlist);\n  this.view.onWindowResize();\n  this.onContactListChanged(this.model.contactlist); // Load Event Listeners\n\n  this.view.onChangeToFavoriteTabs(this.model.contactlist);\n  this.view.onChangeToAllContactsTabs();\n  this.view.onOpenAddContactForm();\n  this.view.onCloseAddContactForm();\n  this.view.onDisplayContactView(this.model.contactlist, this.setCurrentId, this.handleUpdateContact);\n  this.view.onBackBtn();\n  this.view.onToggleFavorite(this.handleToggleFavorite);\n  this.view.onSaveContact(this.handleAddContact, this.model.contactlist);\n  this.view.onUpdateContact(this.handleUpdateContact);\n};\n\n/* harmony default export */ const controller = (Controller);\n;// CONCATENATED MODULE: ./src/scripts/libs/idGenerator.js\nfunction getUniqueId() {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(new Uint32Array(1))[0];\n  }\n\n  return Math.random();\n}\n;// CONCATENATED MODULE: ./src/scripts/libs/formatePhoneNo.js\nfunction formatPhoneNo(number) {\n  var regex = /([\\+?\\d]{3})(\\d{3})(\\d*)/;\n  var str = number;\n  return str.replace(regex, "$1 $2 $3");\n}\n;// CONCATENATED MODULE: ./src/scripts/model.js\nfunction model_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction model_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction model_createClass(Constructor, protoProps, staticProps) { if (protoProps) model_defineProperties(Constructor.prototype, protoProps); if (staticProps) model_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n // TODO\n// Install shortif module\n// =====\n// Model\n// =====\n// - localStorage API used\n\nvar Model = /*#__PURE__*/function () {\n  function Model(id, name, email) {\n    var phone = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";\n    var favorite = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    model_classCallCheck(this, Model);\n\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.phone = phone;\n    this.favorite = favorite; // set for editting options\n\n    this.currentId = "";\n    this.contactlist = JSON.parse(localStorage.getItem("contacts")) || [];\n  }\n\n  model_createClass(Model, [{\n    key: "logData",\n    value: function logData() {\n      return this.contactlist;\n    }\n  }, {\n    key: "commitToDataBase",\n    value: function commitToDataBase(UpdatedContactList) {\n      localStorage.setItem("contacts", JSON.stringify(UpdatedContactList));\n    }\n  }, {\n    key: "addContact",\n    value: function addContact(name, email) {\n      var phone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";\n      var favorite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var contact = {\n        id: getUniqueId(),\n        name: name,\n        email: email,\n        phone: formatPhoneNo(phone),\n        favorite: favorite\n      }; // Update state\n\n      this.contactlist.push(contact); // Update LS\n\n      this.commitToDataBase(this.contactlist);\n    }\n  }, {\n    key: "editContact",\n    value: function editContact(targetContactId, updatedName, updatedEmail) {\n      var updatedPhone = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";\n      var UpdatedContactList = this.contactlist.map(function (currentContact) {\n        if (currentContact.id == targetContactId) {\n          return {\n            id: currentContact.id,\n            name: updatedName,\n            email: updatedEmail,\n            phone: updatedPhone,\n            favorite: currentContact.favorite\n          };\n        }\n\n        return currentContact;\n      }); // Update State\n\n      this.contactlist = UpdatedContactList; // Update LS\n\n      this.commitToDataBase(this.contactlist);\n    } // TODO create delete list\n    // Filter a contact out of array by id\n    // deleteContact(id) {\n    //   // this.contactlist = this.contactlist.filter((contact) => contact.id !== id);\n    // }\n    // Toggle the "favorite" boolean on the targeted contact\n    // - favorite\n\n  }, {\n    key: "updateFavorite",\n    value: function updateFavorite(targetContactId) {\n      var UpdatedContactList = this.contactlist.map(function (currentContact) {\n        if (currentContact.id == targetContactId) {\n          return {\n            id: currentContact.id,\n            name: currentContact.name,\n            email: currentContact.email,\n            phone: currentContact.phone,\n            favorite: !currentContact.favorite\n          };\n        }\n\n        return currentContact;\n      }); // Update State\n\n      this.contactlist = UpdatedContactList; // Update LS\n\n      this.commitToDataBase(UpdatedContactList);\n    }\n  }, {\n    key: "setCurrentId",\n    value: function setCurrentId(id) {\n      this.currentId = id;\n    }\n  }]);\n\n  return Model;\n}();\n\n/* harmony default export */ const model = (Model);\n;// CONCATENATED MODULE: ./src/scripts/app.js\n\n\n\nvar header = document.querySelector(".logo__header--lazy");\nvar largeAddBtn = document.querySelector(".btn__block-contained--add-form--lazy");\nvar tabsAllContact = document.querySelector(".tabs-option__all-contacts--lazy");\nvar tabsFavorites = document.querySelector(".tabs-option__favorites--lazy");\nvar contactPlaceholder = document.querySelector(".contact-placeholder__text--lazy"); // TODO\n\nvar contactViewContainer = document.querySelector(".contact-view__container--lazy");\n\nfunction render() {\n  header.classList.remove("loading", "logo__header--lazy");\n  header.classList.add("logo__header");\n  header.firstElementChild.lastElementChild.textContent = "Contacts";\n  largeAddBtn.classList.remove("loading", "btn__block-contained--add-form--lazy");\n  largeAddBtn.classList.add("btn__block-contained--add-form");\n  largeAddBtn.lastElementChild.textContent = "Add New Contact";\n  tabsAllContact.classList.remove("loading", "tabs-option__all-contacts--lazy");\n  tabsAllContact.classList.add("tabs-option__all-contacts", "tabs-option", "selected");\n  tabsAllContact.firstElementChild.firstElementChild.textContent = "All Contacts";\n  tabsFavorites.classList.remove("loading", "tabs-option__favorites--lazy");\n  tabsFavorites.classList.add("tabs-option__favorites", "tabs-option");\n  tabsFavorites.firstElementChild.lastElementChild.textContent = "Favorites";\n  contactPlaceholder.classList.remove("loading", "contact-placeholder__text--lazy");\n  contactPlaceholder.classList.add("contact-placeholder__text");\n  contactPlaceholder.textContent = "No contact available. Add contact?"; // TODO\n  // Style contactViewContainer\n\n  contactViewContainer.classList.remove("loading", "contact-view__container--lazy");\n  contactViewContainer.classList.add("contact-view__container", "hidden");\n  var app = new controller(new model(), new view());\n}\n\nwindow.addEventListener("load", render); // setTimeout(() => {\n//   render();\n// }, 3000);\n// window.addEventListener("load", () => {\n//   render();\n//   import("./main.styles.scss");\n// });\n;// CONCATENATED MODULE: ./src/main.bundler.js\n// ======\n// Files\n// ======\n// Favicon\n// import favicon from "./favicon.ico";\n// Webmanifest file\n// import "./manifest.webmanifest";\n// =======\n// Scripts\n// =======\n// libs\n\n\n\n\n\n\n\n\nconsole.log("initialising...");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///604\n')}},__webpack_exports__={};__webpack_modules__[604]()})();